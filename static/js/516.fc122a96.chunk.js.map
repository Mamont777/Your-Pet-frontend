{"version":3,"file":"static/js/516.fc122a96.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx","utils/shemas/AuthSchema.jsx"],"sourcesContent":["import { styled } from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { ErrorMessage, Field } from 'formik';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport { theme } from 'styles';\n\nexport const MainLogForm = styled.div`\n  position: relative;\n  margin: 0 auto;\n  padding: 40px 12px;\n  text-align: center;\n  justify-content: center;\n  background-color: ${theme.colors.white};\n  border-radius: 20px;\n  width: 280px;\n  height: 425px;\n  box-shadow: 7px 10px 14px rgba(63, 143, 248, 0.11);\n  z-index: 0;\n  @media (min-width: 768px) {\n    padding: 60px 75px;\n    width: 608px;\n    height: 481px;\n    border-radius: 40px;\n    /* z-index: 99; */\n  }\n  @media screen and (min-width: 1281px) {\n    height: 481px;\n  }\n`;\n\nexport const Titel = styled.h1`\n  font-size: ${theme.fontSizes.xl};\n  font-family: ${theme.fonts.main.medium};\n  margin-bottom: 20px;\n  @media (min-width: 768px) {\n    font-size: ${theme.fontSizes.xxl};\n    margin-bottom: 40px;\n  }\n  @media screen and (min-width: 1281px) {\n  }\n`;\n\nexport const FormField = styled.div`\n  position: relative;\n`;\n\nexport const InputEmailWraper = styled.div`\n  margin-bottom: 14px;\n  border-radius: 40px;\n  border: 1px solid ${theme.colors.blue};\n  @media (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const InputPasswordWraper = styled.div`\n  margin-bottom: 14px;\n  border-radius: 40px;\n  border: 1px solid ${theme.colors.blue};\n  @media (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const InputForm = styled(Field)`\n  padding: 12px 16px;\n  width: 100%;\n  height: 48px;\n  font-size: ${theme.fontSizes.m};\n  font-family: ${theme.fonts.main.regular};\n  border: none;\n  border-radius: 40px;\n  @media (min-width: 768px) {\n    font-size: ${theme.fontSizes.m};\n  }\n  @media screen and (min-width: 1281px) {\n  }\n`;\n\nexport const ErrorMess = styled(ErrorMessage)`\n  position: absolute;\n  font-size: 10px;\n  color: ${theme.colors.red};\n  left: 10px;\n  top: 47px;\n  @media (min-width: 768px) {\n    font-size: 12px;\n  }\n`;\n\nexport const SuccessMessage = styled.p`\n  position: absolute;\n  font-size: 10px;\n  color: ${theme.colors.green};\n  left: 10px;\n  top: 47px;\n  @media (min-width: 768px) {\n    font-size: 12px;\n  }\n`;\n\nexport const IconWraper = styled.div`\n  display: flex;\n  position: absolute;\n  justify-content: end;\n  width: 54px;\n  top: 12px;\n  left: 187px;\n  @media (min-width: 768px) {\n    width: 60px;\n    top: 12px;\n    left: 383px;\n  }\n`;\n\nexport const IconCheck = styled.span`\n  margin-right: auto;\n  svg {\n    stroke: ${theme.colors.green};\n    &:hover {\n      stroke: ${theme.colors.green};\n    }\n  }\n  @media (min-width: 768px) {\n    top: 12px;\n    left: 420px;\n  }\n`;\n\nexport const IconCross = styled.span`\n  margin-right: auto;\n  svg {\n    stroke: ${theme.colors.red};\n    &:hover {\n      stroke: ${theme.colors.red};\n    }\n  }\n  @media (min-width: 768px) {\n    top: 12px;\n    left: 420px;\n  }\n`;\n\nexport const OnIcon = styled(VisibilityIcon)`\n  color: ${theme.colors.blue};\n  @media (min-width: 768px) {\n    top: 12px;\n    left: 420px;\n  }\n`;\n\nexport const OffIcon = styled(VisibilityOffIcon)`\n  color: ${theme.colors.blue};\n  @media (min-width: 768px) {\n    top: 12px;\n    left: 420px;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  height: 48px;\n  margin-top: 96px;\n  margin-bottom: 8px;\n  font-size: ${theme.fontSizes.l};\n  color: ${theme.colors.white};\n  border-radius: 40px;\n  background-color: ${theme.colors.blue};\n  transition: all ${theme.transition.main};\n\n  &:hover {\n    background-color: rgb(121, 189, 253);\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 28px;\n    margin-bottom: 20px;\n    font-family: ${theme.fonts.main.semiBold};\n  }\n  @media screen and (min-width: 1281px) {\n  }\n`;\n\nexport const ToRegister = styled.p`\n  color: ${theme.colors.grey};\n  font-size: ${theme.fontSizes.xs};\n  font-family: ${theme.fonts.main.regular};\n`;\n\nexport const LinkStyled = styled(NavLink)`\n  color: ${theme.colors.blue};\n  font-size: ${theme.fontSizes.xs};\n  font-family: ${theme.fonts.main.regular};\n  margin-left: 4px;\n  text-decoration: underline;\n`;\n","import { useState, useEffect } from 'react';\nimport { Form, Formik } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { loginSchema } from 'utils/shemas/AuthSchema';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/auth-operations';\nimport { useAuth } from 'hooks/useAuth';\n\nimport {\n  MainLogForm,\n  Titel,\n  FormField,\n  InputEmailWraper,\n  InputPasswordWraper,\n  InputForm,\n  IconWraper,\n  IconCheck,\n  IconCross,\n  ErrorMess,\n  SuccessMessage,\n  Button,\n  ToRegister,\n  LinkStyled,\n  OnIcon,\n  OffIcon,\n} from './LoginForm.styled';\nimport { theme } from 'styles';\nimport { Check, Cross } from 'components/icons';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport default function LoginForm() {\n  const [passwordShow, setPasswordShow] = useState(false);\n  const togglePassword = () => setPasswordShow(prevState => !prevState);\n  const {isLoggedIn} = useAuth()\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const data = {\n      email: values.email,\n      password: values.password,\n    };\n    dispatch(login(data));\n    resetForm();\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate('/user');\n    }\n  }, [isLoggedIn, navigate]);\n\n  return (\n    <MainLogForm>\n      <Formik\n        validationSchema={loginSchema}\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n      >\n        {({values ,errors, touched, resetForm, setFieldValue, isSubmitting}) => (\n          <Form>\n            <Titel>Login</Titel>\n            <FormField>\n            <InputEmailWraper style={{borderColor:  !touched.email ? `${theme.colors.blue}` : errors.email  ? `${theme.colors.red}` : `${theme.colors.green}`}}>\n              <InputForm\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                autoComplete=\"on\"\n              />\n              </InputEmailWraper>\n              { !errors.email && touched.email ? (<SuccessMessage>Success, email is valid!</SuccessMessage>) : null }\n\n              <IconWraper>\n              { !touched.email ? null : !errors.email ? \n              <IconCheck style={{marginLeft: \"36px\"}}><Check/></IconCheck> :\n               <IconCross style={{marginLeft: \"36px\"}} id=\"resetBtn\" onClick={()=>{setFieldValue('email', '')}}><Cross/></IconCross>}\n             </IconWraper>\n\n              <ErrorMess name=\"email\" component=\"p\" />\n            </FormField>\n\n            <FormField>\n            <InputPasswordWraper style={{borderColor: !touched.password ? `${theme.colors.blue}` : errors.password  ? `${theme.colors.red}` : `${theme.colors.green}`}}>\n              <InputForm\n                name=\"password\"\n                type={passwordShow ? 'text' : 'password'}\n                placeholder=\"Password\"\n                autoComplete=\"on\"\n              />\n              </InputPasswordWraper>\n              \n              { !errors.password && touched.password? (<SuccessMessage>Success, password is valid!</SuccessMessage>) : null }\n\n              <IconWraper>\n              { !touched.password ? null : !errors.password ? \n              <IconCheck ><Check/></IconCheck> :\n               <IconCross id=\"resetBtn\" onClick={()=>{setFieldValue('password', '')}}><Cross/></IconCross>}\n\n              <span id=\"visibilityBtn\" onClick={togglePassword}>\n                {passwordShow ? <OnIcon /> : <OffIcon />}\n              </span>\n              </IconWraper>\n\n\n              <ErrorMess name=\"password\" component=\"p\" />\n            </FormField>\n            <div>\n              <Button type=\"submit\" disabled={isSubmitting}>Login</Button>\n            </div>\n\n            <ToRegister>\n              Don't have an account?\n              <LinkStyled to=\"/register\">Register</LinkStyled>\n            </ToRegister>\n          </Form>\n        )}\n      </Formik>\n    </MainLogForm>\n  );\n}\n","import { styled } from 'styled-components';\n\nexport const LoginContainer = styled.main`\n  margin: 0 auto;\n  padding: 40px 20px 88px 20px;\n  width: 320px;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding: 80px 80px 395px 80px;\n  }\n  @media screen and (min-width: 1281px) {\n    width: 1280px;\n    padding: 80px 16px 141px 16px;\n  }\n`;\n","import LoginForm from 'components/LoginForm/LoginForm';\nimport { LoginContainer } from './LoginPage.styled';\n\nexport default function LoginPage() {\n  return (\n    <LoginContainer>\n      <LoginForm />\n    </LoginContainer>\n  );\n}\n","import * as Yup from 'yup';\n\nconst emailReq =\n  // eslint-disable-next-line no-useless-escape\n  /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\nconst passwordReq =\n  // eslint-disable-next-line no-useless-escape\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).+$/;\n\nexport const loginSchema = Yup.object({\n  email: Yup.string()\n    .required('Email field is required!')\n    .min(10)\n    .max(30)\n    .matches(emailReq, 'Invalid email format'),\n\n  password: Yup.string()\n    .required('Password field is required!')\n    .min(6, 'Password is too short. The minimum 6 symbols')\n    .max(16, 'Password is too long. The maximum 16 symbols'),\n});\n\nexport const registerSchema = Yup.object({\n  name: Yup.string()\n    .required('Name field is required!')\n    .min(2, 'Name is too short')\n    .matches(/^[A-Za-z-\\s]+$/, 'Name field can contain only latin letters'),\n\n  email: Yup.string()\n    .required('Email field is required!')\n    .min(10)\n    .max(30)\n    .matches(emailReq, 'Invalid email format'),\n\n  password: Yup.string()\n    .required('Password is required!')\n    .min(6, 'Password is too short. The minimum 6 symbols')\n    .max(16, 'Password is too long. The maximum 16 symbols')\n    .matches(\n      passwordReq,\n      'The must contain 6 characters, 1 uppercase, numbers, 1 special case character'\n    ),\n\n  confirmPassword: Yup.string()\n    .required('Password confirmation is required!')\n    .oneOf([Yup.ref('password'), ''], 'Password confirmation must match'),\n});\n"],"names":["MainLogForm","styled","_templateObject","_taggedTemplateLiteral","theme","Titel","_templateObject2","FormField","_templateObject3","InputEmailWraper","_templateObject4","InputPasswordWraper","_templateObject5","InputForm","Field","_templateObject6","ErrorMess","ErrorMessage","_templateObject7","SuccessMessage","_templateObject8","IconWraper","_templateObject9","IconCheck","_templateObject10","IconCross","_templateObject11","OnIcon","VisibilityIcon","_templateObject12","OffIcon","VisibilityOffIcon","_templateObject13","Button","_templateObject14","ToRegister","_templateObject15","LinkStyled","NavLink","_templateObject16","initialValues","email","password","LoginForm","_useState","useState","_useState2","_slicedToArray","passwordShow","setPasswordShow","togglePassword","prevState","isLoggedIn","useAuth","dispatch","useDispatch","navigate","useNavigate","useEffect","_jsx","children","Formik","validationSchema","loginSchema","onSubmit","values","_ref","resetForm","data","login","_ref2","errors","touched","setFieldValue","isSubmitting","_jsxs","Form","style","borderColor","concat","name","type","placeholder","autoComplete","marginLeft","id","onClick","Cross","Check","component","disabled","to","LoginContainer","LoginPage","emailReq","Yup","required","min","max","matches","registerSchema","confirmPassword","oneOf"],"sourceRoot":""}